#!/bin/sh
_version="0.3.0 2022-03-26"
#
#  Copyright (c) 2021,2022: Jacob.Lundqvist@gmail.com
#  License: MIT
#
#  Part of https://github.com/jaclu/spd
#
#  This script is normally controlled by the service mon_sshd.
#
#  Purpose is to restart sshd in case it is no longer responsive
#  Side bonus is that if sshd doesn't start up on boot, this will notice
#  it is not running, and ensure that it is started.
#  If no prompt is seen, stops the service, kills the daemon process if it
#  is still running, then starts the service again.
#

#
#  Set to /dev/null if no logging is desired, or a file if logging is preferred.
#
log_file="/var/log/sshd_monitor.log"

#
# How many seconds to sleep between each check
#
check_intervall=10

#
#  If $log_file is empty or undefined, no logging will occur.
#
log_it() {
    if [ -z "$log_file" ]; then
        return
    fi
    printf "[%s] %s\n" "$(date +'%y-%m-%d %H:%M:%S')" "$@" >>"$log_file"
}

get_prompt() {
    prompt="$(printf '\n' | nc localhost "$port")"
    [ -z "$prompt" ] && return 1 # Error, no response
    return 0                     # OK, got a prompt
}

get_pid() {
    #sshd_pid="$(ps axu |grep "sshd: /usr" | grep -v grep |awk '{ print $2}')"
    sshd_pid="$(pgrep -f 'sshd: /usr')"
}

#
#  Grab port number from /etc/ssh/sshd_config, if not found, default to 22
#
port="$(grep -w Port /etc/ssh/sshd_config | awk '{ print $2 }')"
[ -z "$port" ] && port=22

log_it "Starting sshd monitor version: $_version on port: ($port)"

# At startup wait a bit to give sshd time to actually start up
sleep 10

while true; do
    prompt="$(printf '\n' | nc localhost "$port")"

    if ! get_prompt; then
        #
        #  Attempt one, send a HUP
        #
        get_pid
        if [ -n "$sshd_pid" ]; then
            kill -HUP "$sshd_pid"
            log_it "sent HUP to non-responsive sshd"
            sleep 1
            get_prompt && continue
        fi

        #
        #  Attempt two, HUP didn't help, restart sshd
        #
        /etc/init.d/sshd stop
        sleep 1

        get_pid
        if [ -n "$sshd_pid" ]; then
            log_it "sshd still present after stop, doing kill -9"
            kill -9 "$sshd_pid"
        fi

        /etc/init.d/sshd start
        log_it "restarted sshd"
    fi
    sleep $check_intervall
done
